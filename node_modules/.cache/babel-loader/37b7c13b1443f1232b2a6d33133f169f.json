{"ast":null,"code":"var _jsxFileName = \"/Users/digitalbrum/work/E-News/src/components/NewsCards/NewsCards.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Grow, Typography } from \"@mui/material\";\nimport NewsCard from \"./NewsCard/NewsCard\";\nimport useStyles from \"./styles.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst infoCards = [{\n  color: \"#00838f\",\n  title: \"Latest News\",\n  text: \"Give me the latest news\"\n}, {\n  color: \"#1565c0\",\n  title: \"News by Categories\",\n  info: \"Business, Entertainment, General, Health, Science, Sports, Technology\",\n  text: \"Give me the latest Technology news\"\n}];\n\nconst NewsCards = _ref => {\n  _s();\n\n  let {\n    articles,\n    activeArticle\n  } = _ref;\n  const classes = useStyles();\n\n  if (!articles.length) {\n    return /*#__PURE__*/_jsxDEV(Grow, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.container,\n        container: true,\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: infoCards.map(infoCard => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          className: classes.infoCard,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.card,\n            style: {\n              backgroundColor: infoCard.color\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h5\",\n              children: infoCard.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), infoCard.info ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h6\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: infoCard.title.split(\" \")[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this), \": \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 70\n              }, this), infoCard.info]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h6\",\n              children: [\"Try saying: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 31\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: infoCard.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.container,\n      container: true,\n      alignItems: \"stretch\",\n      spacing: 3,\n      children: articles.map((article, i) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        style: {\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(NewsCard, {\n          activeArticle: activeArticle,\n          i: i,\n          article: article\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewsCards, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewsCards;\nexport default NewsCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsCards\");","map":{"version":3,"names":["React","Grid","Grow","Typography","NewsCard","useStyles","infoCards","color","title","text","info","NewsCards","articles","activeArticle","classes","length","container","map","infoCard","card","backgroundColor","split","article","i","display"],"sources":["/Users/digitalbrum/work/E-News/src/components/NewsCards/NewsCards.js"],"sourcesContent":["import React from \"react\";\nimport { Grid, Grow, Typography } from \"@mui/material\";\nimport NewsCard from \"./NewsCard/NewsCard\";\nimport useStyles from \"./styles.js\";\n\nconst infoCards = [\n  { color: \"#00838f\", title: \"Latest News\", text: \"Give me the latest news\" },\n  {\n    color: \"#1565c0\",\n    title: \"News by Categories\",\n    info: \"Business, Entertainment, General, Health, Science, Sports, Technology\",\n    text: \"Give me the latest Technology news\",\n  },\n];\n\nconst NewsCards = ({ articles, activeArticle }) => {\n  const classes = useStyles();\n\n  if (!articles.length) {\n    return (\n      <Grow in>\n        <Grid\n          className={classes.container}\n          container\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          {infoCards.map((infoCard) => (\n            <Grid\n              item\n              xs={12}\n              sm={6}\n              md={4}\n              lg={3}\n              className={classes.infoCard}\n            >\n              <div\n                className={classes.card}\n                style={{ backgroundColor: infoCard.color }}\n              >\n                <Typography variant=\"h5\" component=\"h5\">\n                  {infoCard.title}\n                </Typography>\n                {infoCard.info ? (\n                  <Typography variant=\"h6\" component=\"h6\">\n                    <strong>{infoCard.title.split(\" \")[2]}</strong>: <br />\n                    {infoCard.info}\n                  </Typography>\n                ) : null}\n                <Typography variant=\"h6\" component=\"h6\">\n                  Try saying: <br /> <i>{infoCard.text}</i>\n                </Typography>\n              </div>\n            </Grid>\n          ))}\n        </Grid>\n      </Grow>\n    );\n  }\n\n  return (\n    <Grow in>\n      <Grid\n        className={classes.container}\n        container\n        alignItems=\"stretch\"\n        spacing={3}\n      >\n        {articles.map((article, i) => (\n          <Grid item xs={12} sm={6} md={4} lg={3} style={{ display: \"flex\" }}>\n            <NewsCard activeArticle={activeArticle} i={i} article={article} />\n          </Grid>\n        ))}\n      </Grid>\n    </Grow>\n  );\n};\n\nexport default NewsCards;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}